name: Build, Test, and Release

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-test-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get next semantic version
        id: semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          bump_each_commit: true

      - name: test
        run: |
          go test -v ./...

      - name: Build Linux amd64
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags "-X github.com/WillyWinkel/ytc/internal/cmds.Version=${{ steps.semver.outputs.version }}" -o ytc-server-linux-amd64 .

      - name: Build Linux arm64
        run: |
          GOOS=linux GOARCH=arm64 go build -ldflags "-X github.com/WillyWinkel/ytc/internal/cmds.Version=${{ steps.semver.outputs.version }}" -o ytc-server-linux-arm64 .

      - name: Build Windows amd64
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags "-X github.com/WillyWinkel/ytc/internal/cmds.Version=${{ steps.semver.outputs.version }}" -o ytc-server-windows-amd64.exe .

      - name: Build Windows arm64
        run: |
          GOOS=windows GOARCH=arm64 go build -ldflags "-X github.com/WillyWinkel/ytc/internal/cmds.Version=${{ steps.semver.outputs.version }}" -o ytc-server-windows-arm64.exe .

      - name: Build macOS amd64
        run: |
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X github.com/WillyWinkel/ytc/internal/cmds.Version=${{ steps.semver.outputs.version }}" -o ytc-server-darwin-amd64 .

      - name: Build macOS arm64
        run: |
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X github.com/WillyWinkel/ytc/internal/cmds.Version=${{ steps.semver.outputs.version }}" -o ytc-server-darwin-arm64 .

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch --tags

      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git tag ${{ steps.semver.outputs.version }}
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} ${{ steps.semver.outputs.version }}

      - name: Create Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: ${{ steps.semver.outputs.version }}
          name: Release ${{ steps.semver.outputs.version }}
          files: |
            ytc-server-linux-amd64
            ytc-server-linux-arm64
            ytc-server-windows-amd64.exe
            ytc-server-windows-arm64.exe
            ytc-server-darwin-amd64
            ytc-server-darwin-arm64
          body: |
            Automated release for version ${{ steps.semver.outputs.version }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
